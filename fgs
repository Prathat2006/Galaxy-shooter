Task: Visualizing and Understanding Program Flow

Programming does not always execute in a simple top-to-bottom manner. Instead, function calls, conditionals, and control structures can alter the natural sequence of execution. Your task is to analyze and describe how a simple program executes step by step.   

Steps to follow: Observe the given code snippet: Below is a Python program with function calls and an if-else statement. 

Python Code snippet:

def add(a, b):

    return a + b


def subtract(a, b):

    return a - b


def main():

    x = int(input("Enter first number: "))

    y = int(input("Enter second number: "))

    if x > y:

        result = subtract(x, y)

        print("Subtraction result:", result)

    else:

        result = add(x, y)

        print("Addition result:", result)


main()

Break it down step-by-step:

What happens first when the program runs?   

What happens when the user inputs values?   

When does the function add get called? When does subtract get called?   

What role does the if-else block play in deciding which function runs?   

Draw a simple diagram or flowchart to visualize the program's execution flow.

ðŸŽ¯ Your Deliverable:

Explain in simple steps what happens when a user enters 5 and 3 as inputs.   

Explain what happens when a user enters 2 and 6 as inputs.